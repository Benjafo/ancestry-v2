services:
    client:
      build:
        context: ./client
        args:
          - REACT_APP_API_URL=http://localhost:5000/api/v1
      restart: always
      depends_on:
        - server
      environment:
        - CHOKIDAR_USEPOLLING=true
        - FAST_REFRESH=true
      ports:
        - "5173:5173"
      volumes:
        - ./client:/app  # Mount source code for hot reloading
        - /app/node_modules  # Prevent overriding node_modules with host directory

    # Backend Express application in development mode
    server:
        image: node:20-alpine
        command: sh -c "npm install && npm run dev"
        ports:
            - "3000:3000"
        working_dir: /app
        environment:
            - NODE_ENV=development
            - DATABASE_URL=postgres://postgres:postgres@db:5432/ancestrydb
            - JWT_SECRET=dev_jwt_secret_key
            - CHOKIDAR_USEPOLLING=true
        volumes:
            - ./server:/app
            - /app/node_modules
        depends_on:
            - db

    # PostgreSQL Database
    db:
        image: postgres:16-alpine
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=ancestrydb
        volumes:
            - postgres-data:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    postgres-data:
        driver: local
